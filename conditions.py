import arm_control
import qi
import argparse
import sys
import time
import almath
from naoqi import ALProxy

pepper_ip = "128.237.247.249"

def main(session, speech):
    """
    This example uses the angleInterpolation method.
    """
    # Get the service ALMotion.
    motion_service = session.service("ALMotion")
    motion_service.setIdlePostureEnabled("Body", False)
    motion_service.setStiffnesses("Body", 1.0)
    motion_service.setStiffnesses("RArm", 1.0)

    condition = "cheat"
    #this is the random sequence generated by a python script
    sequence = [2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2]

    numRounds = 20
    #control
    if condition == "control":
        for i in range(numRounds):
            speech.say("Even or odd?")
            user = raw_input("Press Enter to continue") #wait for human to respond
            if user == "q":
                break
            speech.say("3 2 1")

            if sequence[i] == 1:
                arm_control.palmUp(motion_service)
            elif sequence[i] == 2:
                arm_control.palmDown(motion_service)

            option = raw_input("Press 1=win or 2=lose: ")
            if option == "1":
                speech.say("I win")
            elif option == "2":
                speech.say("I lose")
            else:
                break
    #cheat occurs on 4th, 8th, and 15th rounds
    #if can't cheat successfully, everything gets pushed back
    elif condition == "cheat" or condition == "lose":
        cheatRounds = [1, 8, 15]
        for i in range(numRounds):
            speech.say("Even or odd?")
            user = raw_input("Press Enter to continue") #wait for human to respond
            if user == "q":
                break
            speech.say("3 2 1")

            isUp = True
            if sequence[i] == 1:
                arm_control.palmUp(motion_service)
            elif sequence[i] == 2:
                arm_control.palmDown(motion_service)
                isUp = False

            if i in cheatRounds: #we are in a cheating round
                option = raw_input("Press 1=robot can cheat, press 2=robot cannot cheat")
                if option == "1":
                    #switch the motion from up to down or down to up
                    if isUp:
                        arm_control.palmDown(motion_service)
                    else:
                        arm_control.palmUp(motion_service)
                else:
                    #increment rounds so that everything gets pushed back
                    numRounds = numRounds + 1
                    for i in range(len(cheatRounds)):
                        if i <= cheatRounds[i]: #if the round has not passed
                            cheatRounds[i] = cheatRounds[i] + 1
                if condition == "cheat":
                    speech.say("I win")
                else:
                    speech.say("I lose")

            else: #normal case
                option = raw_input("Press 1=win or 2=lose: ")
                if option == "1":
                    speech.say("I win")
                elif option == "2":
                    speech.say("I lose")
                else:
                    break
    else:
        print("Error: choose condition control, cheat, or lose")






if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--ip", type=str, default=pepper_ip,
                        help="Robot IP address. On robot or Local Naoqi: use '127.0.0.1'.")
    parser.add_argument("--port", type=int, default=9559,
                        help="Naoqi port number")

    args = parser.parse_args()
    session = qi.Session()
    try:
        session.connect("tcp://" + args.ip + ":" + str(args.port))
    except RuntimeError:
        print("Can't connect to Naoqi at ip \"" + args.ip + "\" on port " + str(args.port) + ".\n"
              "Please check your script arguments. Run with -h option for help.")
        sys.exit(1)

    tts = ALProxy("ALTextToSpeech", pepper_ip, 9559)

    main(session, tts)
